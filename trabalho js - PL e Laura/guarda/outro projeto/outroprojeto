<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Jogo da Forca com Dicas</title>
  <!-- Bootstrap 5 CDN -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
  <style>
    body {
      background-color: #f3f6f8;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      padding: 20px;
    }
    .container-game {
      max-width: 600px;
      margin: 0 auto;
      background: #fff;
      border-radius: 10px;
      padding: 30px 20px 40px;
      box-shadow: 0 5px 15px rgb(0 0 0 / 0.1);
      text-align: center;
    }
    h1 {
      color: #0d6efd;
      margin-bottom: 0;
    }
    #tip {
      font-style: italic;
      color: #6c757d;
      margin-top: 4px;
      margin-bottom: 25px;
      font-size: 1.1rem;
      user-select: none;
    }
    #word {
      font-size: 2.5rem;
      letter-spacing: 12px;
      margin-bottom: 25px;
      user-select: none;
      font-weight: 700;
      color: #0d6efd;
      min-height: 50px;
    }
    #used-letters {
      min-height: 24px;
      color: #6c757d;
      margin-bottom: 20px;
      font-size: 1rem;
      user-select: none;
    }
    #message {
      min-height: 30px;
      font-weight: 600;
      font-size: 1.2rem;
      margin-top: 15px;
      user-select: none;
      color: #333;
    }
    #keyboard button {
      width: 42px;
      margin: 4px;
      text-transform: uppercase;
      font-weight: 600;
      user-select: none;
      transition: background-color 0.3s ease;
    }
    #keyboard button:disabled {
      background-color: #6c757d !important;
      color: #e9ecef !important;
      cursor: not-allowed;
    }
    canvas {
      margin: 0 auto 30px;
      display: block;
      background-color: #e9ecef;
      border-radius: 8px;
    }
  </style>
</head>
<body>

  <div class="container-game shadow">
    <h1>Jogo da Forca</h1>
    <div id="tip" aria-live="polite" aria-label="Dica da palavra"></div>
    <canvas id="forcaCanvas" width="300" height="400" aria-label="Desenho da forca" role="img"></canvas>
    <div id="word" aria-label="Palavra a ser adivinhada"></div>
    <div id="used-letters" aria-live="polite" aria-label="Letras usadas">Letras usadas: Nenhuma</div>
    <div id="keyboard" class="d-flex flex-wrap justify-content-center" aria-label="Teclado virtual"></div>
    <button id="restart" class="btn btn-primary mt-3" hidden>Reiniciar Jogo</button>
    <div id="message" role="alert" aria-live="assertive"></div>
  </div>

  <script>
 
    const palavrasComDicas = [
      { palavra: 'JAVASCRIPT', dica: 'Linguagem de programação para web.' },
      { palavra: 'BOOTSTRAP', dica: 'Framework CSS para design responsivo.' },
      { palavra: 'DESENVOLVEDOR', dica: 'Profissional que escreve código.' },
      { palavra: 'FORCA', dica: 'Jogo onde se adivinha palavras letra a letra.' },
      { palavra: 'PROGRAMA', dica: 'Conjunto de instruções para o computador.' },
      { palavra: 'COMPUTADOR', dica: 'Máquina eletrônica que executa programas.' },
      { palavra: 'INTERFACE', dica: 'Ponto de interação entre usuário e sistema.' },
      { palavra: 'CODIGO', dica: 'Texto escrito para criar software.' },
      { palavra: 'PAGINA', dica: 'Documento exibido em navegadores web.' },
      { palavra: 'TECLADO', dica: 'Dispositivo de entrada para digitação.' }
    ];

    const maxErros = 6;
    let palavraSecreta = '';
    let dicaAtual = '';
    let letrasUsadas = new Set();
    let erros = 0;
    let jogoAtivo = true;

  
    const canvas = document.getElementById('forcaCanvas');
    const ctx = canvas.getContext('2d');
    const wordEl = document.getElementById('word');
    const tipEl = document.getElementById('tip');
    const usedLettersEl = document.getElementById('used-letters');
    const keyboardEl = document.getElementById('keyboard');
    const restartBtn = document.getElementById('restart');
    const messageEl = document.getElementById('message');

    function iniciarJogo() {
   
      const escolha = palavrasComDicas[Math.floor(Math.random() * palavrasComDicas.length)];
      palavraSecreta = escolha.palavra;
      dicaAtual = escolha.dica;

      letrasUsadas.clear();
      erros = 0;
      jogoAtivo = true;
      messageEl.textContent = '';
      restartBtn.hidden = true;

      tipEl.textContent = 'Dica: ' + dicaAtual;

      atualizarPalavra();
      atualizarLetrasUsadas();
      criarTeclado();
      desenharForca();
    }

    function atualizarPalavra() {
      let display = '';
      for (const letra of palavraSecreta) {
        display += letrasUsadas.has(letra) ? letra + ' ' : '_ ';
      }
      wordEl.textContent = display.trim();
    }

    function atualizarLetrasUsadas() {
      if (letrasUsadas.size === 0) {
        usedLettersEl.textContent = 'Letras usadas: Nenhuma';
      } else {
        usedLettersEl.textContent = 'Letras usadas: ' + [...letrasUsadas].sort().join(', ');
      }
    }

    function criarTeclado() {
      keyboardEl.innerHTML = '';
      const alfabeto = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
      for (const letra of alfabeto) {
        const btn = document.createElement('button');
        btn.className = 'btn btn-outline-primary';
        btn.textContent = letra;
        btn.disabled = letrasUsadas.has(letra) || !jogoAtivo;
        btn.addEventListener('click', () => tentarLetra(letra));
        keyboardEl.appendChild(btn);
      }
    }

    function tentarLetra(letra) {
      if (!jogoAtivo || letrasUsadas.has(letra)) return;
      letrasUsadas.add(letra);

      if (palavraSecreta.includes(letra)) {
        messageEl.textContent = `Muito bem! A letra "${letra}" está na palavra.`;
      } else {
        erros++;
        messageEl.textContent = `A letra "${letra}" não está na palavra. Restam ${maxErros - erros} tentativas.`;
        desenharForca();
      }

      atualizarPalavra();
      atualizarLetrasUsadas();
      criarTeclado();
      verificarFimJogo();
    }

    function verificarFimJogo() {
      const ganhou = [...palavraSecreta].every(l => letrasUsadas.has(l));
      if (ganhou) {
        messageEl.textContent = '🎉 Parabéns! Você venceu!';
        jogoAtivo = false;
        restartBtn.hidden = false;
        criarTeclado();
      } else if (erros >= maxErros) {
        messageEl.textContent = `☠️ Você perdeu! A palavra era: ${palavraSecreta}`;
      
        palavraSecreta.split('').forEach(l => letrasUsadas.add(l));
        atualizarPalavra();
        jogoAtivo = false;
        restartBtn.hidden = false;
        criarTeclado();
      }
    }

    function desenharForca() {
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      ctx.strokeStyle = '#0d6efd';
      ctx.lineWidth = 5;

     
      ctx.beginPath();
      ctx.moveTo(50, 380);
      ctx.lineTo(250, 380);
      ctx.stroke();

  
      ctx.beginPath();
      ctx.moveTo(100, 380);
      ctx.lineTo(100, 50);
      ctx.stroke();

    
      ctx.beginPath();
      ctx.moveTo(100, 50);
      ctx.lineTo(220, 50);
      ctx.stroke();

    
      ctx.beginPath();
      ctx.moveTo(220, 50);
      ctx.lineTo(220, 100);
      ctx.stroke();

    
      if (erros > 0) {
        ctx.beginPath();
        ctx.arc(220, 130, 30, 0, Math.PI * 2);
        ctx.stroke();
      }

      
      if (erros > 1) {
        ctx.beginPath();
        ctx.moveTo(220, 160);
        ctx.lineTo(220, 250);
        ctx.stroke();
      }

     
      if (erros > 2) {
        ctx.beginPath();
        ctx.moveTo(220, 180);
        ctx.lineTo(170, 210);
        ctx.stroke();
      }

    
      if (erros > 3) {
        ctx.beginPath();
        ctx.moveTo(220, 180);
        ctx.lineTo(270, 210);
        ctx.stroke();
      }

    
      if (erros > 4) {
        ctx.beginPath();
        ctx.moveTo(220, 250);
        ctx.lineTo(170, 300);
        ctx.stroke();
      }

    
      if (erros > 5) {
        ctx.beginPath();
        ctx.moveTo(220, 250);
        ctx.lineTo(270, 300);
        ctx.stroke();
      }
    }

    restartBtn.addEventListener('click', iniciarJogo);

    window.onload = iniciarJogo;
  </script>

</body>
</html>

